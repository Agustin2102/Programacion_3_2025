---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import TabsContainer from '../components/TabsContainer.astro';
import TabContent from '../components/TabContent.astro';
import { getTasks, saveTasks } from '../lib/manageState';

// Configuración inicial
const tabs = [
  { id: 'personal', title: 'Personal' },
  { id: 'professional', title: 'Profesional' }
];
const activeTab = Astro.url.searchParams.get('tab') || tabs[0].id;
const currentFilter = Astro.url.searchParams.get('filter') || 'all';

// Estado inicial
interface Task {
  id: string;
  text: string;
  completed: boolean;
  tabId: string;
}
// Cargar tareas desde state.json
let tasks = await getTasks();

// Procesar POST (actualizar tareas)
if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const action = formData.get('action');
  const tabId = formData.get('tabId')?.toString() || activeTab;

  switch (action) {
    case 'add':
      tasks.push({
        id: Date.now().toString(),
        text: formData.get('text')?.toString() || '',
        completed: false,
        tabId,
      });
      break;

    case 'toggle':
      tasks = tasks.map(t => 
        t.id === formData.get('taskId') ? {...t, completed: !t.completed} : t
      );
      break;

    case 'delete':
      tasks = tasks.filter(t => t.id !== formData.get('taskId'));
      break;

    case 'clear-completed':
      tasks = tasks.filter(t => !(t.tabId === tabId && t.completed));
      break;
  }

  // Guardar cambios en state.json
  await saveTasks(tasks);
  
}

// Filtrar tareas
const filteredTasks = tasks.filter(t => 
  t.tabId === activeTab &&  // Filtro por pestaña (obligatorio)
  (currentFilter === 'all' || 
   (currentFilter === 'completed' && t.completed) || 
   (currentFilter === 'active' && !t.completed))
);
---
<Layout>
  <Header />
  <main>
    <TabsContainer tabs={tabs} activeTab={activeTab} />
    
    {tabs.map(tab => (
      <TabContent
        tabId={tab.id}
        title={tab.title}
        isActive={tab.id === activeTab}
        tasks={filteredTasks}
        currentFilter={currentFilter}
        tasksState={JSON.stringify(tasks)}
      />
    ))}
  </main>
</Layout>

<style>
  main {
    max-width: 600px;
    margin: 20px auto;
    padding: 20px;
    background-color: white;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
</style>