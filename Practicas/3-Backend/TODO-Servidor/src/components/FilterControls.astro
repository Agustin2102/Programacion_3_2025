---
import UiButton from 'src/components/UiButton.astro';

export interface Props {
  tabId: string;
  currentFilter: string;
}

const { tabId, currentFilter } = Astro.props;
const filters = [
  { id: 'all', label: 'All' },
  { id: 'active', label: 'Active' },
  { id: 'completed', label: 'Completed' }
];
---
 
<div class="filter-buttons-container 
  flex gap-[10px] justify-center my-4 mx-0">
  <!-- Botones de filtro -->
  {filters.map(filter => (
    <UiButton
      href={`?tab=${tabId}&filter=${filter.id}`}
      isActive={filter.id === currentFilter}
    >
      {filter.label}
    </UiButton>
    /*
    <a
      href={`?tab=${tabId}&filter=${filter.id}`}
      class=  {`filter-button ${filter.id === currentFilter ? 'active' : ''}`}
    >
      {filter.label}
    </a>
    */
  ))}

  <!-- BotÃ³n Limpiar -->
  <form method="POST" action="/api/tasks">
    <input type="hidden" name="action" value="clear-completed" />
    <input type="hidden" name="tabId" value={tabId} />
    
    <UiButton type="submit">Limpiar completadas</UiButton>

    <!--
    <button type="submit" class="filter-button
      PX-2 PY-1 bg-[antiquewhite] border border-[burlywood] rounded cursor-pointer text-[chocolate] no-underline transition-all hover:bg-[#e6d5c3];"
    >Limpiar completadas</button>
    -->
  </form>
</div>

<!--
<style>
  
  .filter-buttons-container {
    display: flex;
    gap: 10px;
    justify-content: center;
    margin: 15px 0;
  }

  .filter-button {
    padding: 5px 10px;
    background-color: antiquewhite;
    border: 1px solid burlywood;
    border-radius: 4px;
    cursor: pointer;
    color: chocolate;
    text-decoration: none;
    transition: all 0.3s;
    font-family: inherit;
    font-size: inherit;
  }
  
  a.filter-button, button.filter-button {
    display: inline-block;
  }
  
  .filter-button:hover {
    background-color: #e6d5c3;
  }
  
  .filter-button.active {
    background-color: burlywood;
    color: white;
  }
  
</style>
-->